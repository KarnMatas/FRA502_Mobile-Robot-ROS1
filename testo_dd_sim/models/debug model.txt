<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="malight">

  <xacro:property name="base_link_height" value="0.15" />
  <xacro:property name="wheel_radius" value="0.08" />
  <xacro:property name="wheel_length" value="0.05" />
  <xacro:property name="camera_link" value="0.05" /> <!-- Size of square 'camera' box -->
  <xacro:property name="laser_link" value="0.05" /> <!-- Size of square 'laser' box -->
  
  <xacro:macro name="wheel" params="name z_offset l r">
    <link name="${name}">
      <visual>
      <origin xyz="0 0 ${z_offset}"/>
      <geometry>
        <cylinder length="${l}" radius="${r}" />
      </geometry>
      </visual>
    </link>
  </xacro:macro>

  <link name="base_link">
    <visual>
    <origin xyz="0 0 ${(base_link_height/2.0)+(wheel_radius-0.025)}"/>
    <geometry>
      <box size="0.5 0.3 ${base_link_height}" />
    </geometry>
    </visual>
    <collision>
     <origin xyz="0 0 ${(base_link_height/2.0)+(wheel_radius-0.025)}"/>
     <geometry>
       <box size="0.5 0.3 ${base_link_height}" />
     </geometry>
   </collision>
  </link>
  
  <xacro:wheel name="left_wheel" z_offset="${wheel_length/2.0}" l="${wheel_length}" r="${wheel_radius}"/>

  <xacro:wheel name="right_wheel" z_offset="${wheel_length/2.0}" l="${wheel_length}" r="${wheel_radius}"/>

  <link name="caster_wheel">
      <visual>
      <origin xyz="0 0 0"/>
      <geometry>
        <sphere radius="${((base_link_height/2.0)+(wheel_radius-0.025))/4}"/>
      </geometry>
      </visual>
  </link>

  <!-- Camera -->
  <link name="camera_link">
    <collision>
      <geometry>
      <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
      <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <!-- Laser -->
  <link name='laser_link'>
      <collision>
      		<geometry>
        		<box size="${laser_link} ${laser_link} ${laser_link}"/>
      		</geometry>
      	</collision>
      	<inertial>
      		<mass value="0.5"/>
      		<origin xyz="0 0 0" rpy=" 0 0 0"/>
	      	<inertia ixx="1e-6" ixy="0.0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
     	</inertial>
    	<visual >
      		<origin xyz="0 0 0" rpy=" 0 0 0"/>
      		<geometry>
        		<box size="${laser_link} ${laser_link} ${laser_link}"/>
      		</geometry>
    	</visual>
      </link>




  
  <joint name="left_wheel_base" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="-0.2 0.15 ${(base_link_height/2.0)-0.05+(wheel_radius-0.025)}" rpy="-1.57 0 0"/>
    <axis xyz="0 0 1" />
  </joint>

  <joint name="right_wheel_base" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="-0.2 -0.15 ${(base_link_height/2.0)-0.05+(wheel_radius-0.025)}" rpy="-1.57 0 3.14"/>
    <axis xyz="0 0 1" />
  </joint>

  <joint name="caster_base" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin xyz="0.2 0 ${ (((base_link_height/2.0)+(wheel_radius-0.025))-(base_link_height/2))/2 }" />
    <axis xyz="0 0 1" />
  </joint>

  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz=" 0.275 0 0.18" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>
  
  <joint name="laser_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz=" 0.205 0 0.23" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="laser_link"/>
  </joint>


  <!--gazebo plugin-->

  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  
  <!-- hokuyo laser-->
	<gazebo reference="laser_link">
		<sensor type="ray" name="head_hokuyo_sensor">
		    <pose>0 0 0 0 0 0</pose>
		    <visualize>False</visualize>
		    <update_rate>40</update_rate>
		    <ray>
		        <scan>
		            <horizontal>
		                <samples>720</samples>
		                <resolution>1</resolution>
		                <min_angle>-1.570796</min_angle>
		                <max_angle>1.570796</max_angle>
		            </horizontal>
		        </scan>
		        <range>
		            <min>0.10</min>
		            <max>10.0</max>
		            <resolution>0.01</resolution>
		        </range>
		        <noise>
		            <type>gaussian</type>
		            <!-- Noise parameters based on published spec for Hokuyo laser
		                 achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
		                 stddev of 0.01m will put 99.7% of samples within 0.03m of the true
		                 reading. -->
		            <mean>0.0</mean>
		            <stddev>0.01</stddev>
		        </noise>
		    </ray>
		    <plugin name="lidar_controller" filename="libgazebo_ros_ray_sensor.so">
		        <ros>
		            <namespace>distance</namespace>
		            <remapping>~/out:=lidar</remapping>
		        </ros>
		        <output_type>sensor_msgs/LaserScan</output_type>
		        <radiation_type>infrared</radiation_type>
		        <topicName>/laser</topicName>
		        <frameName>laser_link</frameName>
		    </plugin>
		</sensor>
	</gazebo>
  
  <!-- diff_drive -->
  <gazebo>
	  <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
	   <updateRate>100</updateRate>
	    <!-- wheels -->
	    <left_joint>left_wheel_base</left_joint>
	    <right_joint>right_wheel_base</right_joint>

	    <!-- kinematics -->
	    <wheel_separation>0.35</wheel_separation>
	    <wheel_diameter>0.16</wheel_diameter>

	    <!-- limits -->
	    <max_wheel_torque>2</max_wheel_torque>
	    <max_wheel_acceleration>0</max_wheel_acceleration>
	    <commandTopic>cmd_vel</commandTopic>
	    <!-- output -->
	    <publish_odom>true</publish_odom>
	    <publish_odom_tf>true</publish_odom_tf>
	    <publish_wheel_tf>true</publish_wheel_tf>

	    <odometry_frame>odom</odometry_frame>
	    <robot_base_frame>base_link</robot_base_frame>
	  </plugin>
	</gazebo> 
  
</robot>